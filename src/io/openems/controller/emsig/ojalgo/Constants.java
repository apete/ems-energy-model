package io.openems.controller.emsig.ojalgo;

import java.util.stream.IntStream;

public class Constants {

	public final static int NO_OF_PERIODS = 96; // 24 or 96
	public final static int MINUTES_PER_PERIOD = 15; // 60 or 15

	/**
	 * Grid Feed-In Limit, e.g. 70 % law
	 */
	public final static int GRID_SELL_LIMIT = 30000; // [W]
	public final static int GRID_BUY_LIMIT = 30000; // [W]

	public final static int ESS_INITIAL_ENERGY = 23700; // [Wh] //
	public final static int ESS_MIN_ENERGY = 0; // [Wh]
	public final static int ESS_MAX_ENERGY = 44000; // [Wh] Fems4: 44000
	public final static int ESS_MAX_CHARGE = 10000; // [W]
	public final static int ESS_MAX_DISCHARGE = 10000; // [W]
	public final static int ESS_CHARGE_EFFICIENCY = 95; // [%, 0-100] 
	public final static int ESS_DISCHARGE_EFFICIENCY = 105; // [%, 100-200] 

	public final static int EV_INITIAL_ENERGY = 0; // [Wh] TODO
	public final static int EV_MAX_ENERGY = 0; // [Wh]
	public final static int EV_MIN_CHARGE = 0; // [W] 
	public final static int EV_MAX_CHARGE = 0; // [W]
	public final static int EV_CHARGING_EFFICIENCY = 90; // [%, 0-100]
	
	// TODO EV charging
	//  EV charging processes can be specified by their
	// available time for charging (add variable), minimum and maximum required energy to be
	// charged (add variables), potentially hardware-specific charging limitations,
	//and a charging command
	
	
	// add PV, assume (for now) constant production
//	public final static int PV_POWER_CONST = 70; // [W]
//	public final static int[] PV_POWER = IntStream.of(new int[NO_OF_PERIODS]).map(i -> PV_POWER_CONST)
//			.toArray();
	
//	public final static int[] PV_POWER = {0, 0, 0, 0, 0, 0, 0, 50, 60, 70, 100, 150, 300, 300, 200, 100, 50, 50, 0, 0, 0, 0, 0, 0};
//	public final static int[] HH_LOAD = {100, 100, 100, 100, 100, 100, 150, 150, 200, 300, 200, 250, 200, 200, 150, 150, 200, 150, 100, 100, 100, 100, 100, 100};

	// add some (household) load which is once again assumed to be constant
//	public final static int HH_LOAD_CONST = 150; // [W]
//	public final static int[] HH_LOAD = IntStream.of(new int[NO_OF_PERIODS]).map(i -> HH_LOAD_CONST)
//			.toArray();
	
	// Fems4, 22.07.21
	public final static int[] PV_POWER = {0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			6,
			246,
			504,
			759,
			969,
			1161,
			1377,
			1655,
			1968,
			2728,
			4035,
			5102,
			7122,
			8826,
			9909,
			11885,
			12889,
			14194,
			15494,
			16664,
			17709,
			18609,
			19517,
			20298,
			21151,
			21851,
			22627,
			23483,
			23614,
			23744,
			24046,
			24047,
			23898,
			24123,
			23773,
			23526,
			23253,
			23077,
			22456,
			22041,
			21509,
			20661,
			19885,
			19001,
			18034,
			17041,
			15849,
			14527,
			12980,
			10395,
			7633,
			5310,
			3472,
			2331,
			1878,
			1538,
			1182,
			834,
			510,
			276,
			34,
			0, //-9
			0, //-4
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0};
	
	// Fems4, 22.07.2021
	public final static int[] HH_LOAD = {2743,
			2654,
			2693,
			2707,
			2623,
			2642,
			2699,
			2670,
			2640,
			2724,
			2669,
			2630,
			2699,
			2656,
			2644,
			2672,
			2657,
			2748,
			2845,
			3094,
			2955,
			2736,
			2685,
			2373,
			1228,
			912,
			519,
			518,
			930,
			750,
			743,
			606,
			565,
			2282,
			2829,
			3363,
			3065,
			3038,
			919,
			796,
			829,
			789,
			786,
			1411,
			3804,
			3934,
			4165,
			2497,
			1889,
			2152,
			1081,
			868,
			899,
			816,
			865,
			890,
			877,
			916,
			1592,
			3143,
			3126,
			2913,
			4832,
			5522,
			3667,
			3604,
			2857,
			2859,
			3836,
			4054,
			4746,
			3900,
			4292,
			4078,
			4388,
			4645,
			5265,
			6669,
			5219,
			5273,
			5306,
			5269,
			3085,
			2966,
			1653,
			736,
			675,
			725,
			654,
			630,
			457,
			444,
			504,
			434,
			419,
			491};
	
	// Fems4 23.07.21
//	public final static int[] PV_POWER = {
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			12,
//			301,
//			742,
//			1096,
//			1511,
//			1852,
//			2011,
//			2101,
//			2500,
//			3528,
//			4271,
//			5335,
//			6697,
//			8529,
//			8656,
//			10293,
//			12348,
//			13640,
//			14804,
//			15710,
//			16742,
//			17765,
//			18692,
//			19442,
//			20255,
//			20924,
//			21574,
//			22361,
//			22444,
//			22929,
//			23215,
//			23143,
//			23093,
//			23077,
//			22837,
//			22577,
//			22336,
//			21931,
//			21488,
//			21086,
//			20615,
//			19989,
//			19394,
//			18527,
//			17569,
//			16508,
//			15351,
//			14201,
//			12917,
//			10233,
//			7414,
//			5074,
//			3194,
//			2026,
//			1612,
//			1318,
//			1027,
//			743,
//			448,
//			260,
//			27,
//			0, //-5
//			0, //-4
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0
//	};
//	
//	// Fems4 23.07.21
//	public final static int[] HH_LOAD = {
//			466,
//			459,
//			495,
//			483,
//			460,
//			445,
//			528,
//			439,
//			408,
//			378,
//			388,
//			394,
//			389,
//			422,
//			437,
//			415,
//			397,
//			434,
//			786,
//			497,
//			660,
//			612,
//			550,
//			687,
//			666,
//			875,
//			679,
//			877,
//			2779,
//			2727,
//			2777,
//			487,
//			537,
//			581,
//			476,
//			1004,
//			787,
//			792,
//			818,
//			915,
//			773,
//			681,
//			708,
//			1260,
//			3660,
//			3681,
//			3561,
//			892,
//			1889,
//			1647,
//			2225,
//			1010,
//			3055,
//			3478,
//			4959,
//			3622,
//			3457,
//			3467,
//			5363,
//			5994,
//			6177,
//			8692,
//			5625,
//			5402,
//			5464,
//			5001,
//			3994,
//			4464,
//			3429,
//			1727,
//			1149,
//			1665,
//			1416,
//			1471,
//			770,
//			1560,
//			1298,
//			1856,
//			4300,
//			3630,
//			3582,
//			3317,
//			4687,
//			3919,
//			4157,
//			4105,
//			4121,
//			3906,
//			3740,
//			3199,
//			2019,
//			462,
//			431,
//			460,
//			445,
//			395
//	};
	
	// Fems4 05.10.21
//	public final static int[]  PV_POWER = {0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			483,
//			732,
//			989,
//			2436,
//			3475,
//			2245,
//			3086,
//			6475,
//			7215,
//			7037,
//			4162,
//			4568,
//			3728,
//			1605,
//			1928,
//			3853,
//			6337,
//			3085,
//			2495,
//			1927,
//			2168,
//			3324,
//			5365,
//			4967,
//			5627,
//			4584,
//			5822,
//			3813,
//			2549,
//			2543,
//			2723,
//			3139,
//			3169,
//			2049,
//			1490,
//			1617,
//			2367,
//			1700,
//			961,
//			939,
//			698,
//			129,
//			1211,
//			529,
//			418,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0 }; 
//	
//	// Fems4 05.10.21
//	public final static int[]  HH_LOAD = {
//			400,
//			429,
//			483,
//			427,
//			456,
//			460,
//			424,
//			401,
//			458,
//			400,
//			446,
//			446,
//			1861,
//			3502,
//			4969,
//			5368,
//			426,
//			419,
//			458,
//			393,
//			528,
//			2047,
//			3738,
//			6339,
//			3958,
//			718,
//			918,
//			773,
//			632,
//			1097,
//			672,
//			754,
//			1276,
//			1539,
//			2721,
//			2096,
//			1215,
//			1189,
//			675,
//			748,
//			1156,
//			679,
//			2174,
//			6353,
//			6314,
//			5516,
//			7443,
//			8324,
//			8276,
//			7880,
//			6547,
//			3653,
//			7518,
//			8998,
//			9472,
//			8895,
//			3400,
//			1716,
//			1463,
//			1394,
//			1195,
//			1265,
//			525,
//			724,
//			3915,
//			6383,
//			6091,
//			4092,
//			1393,
//			2141,
//			1633,
//			1250,
//			1019,
//			966,
//			911,
//			987,
//			1060,
//			1087,
//			1071,
//			978,
//			890,
//			907,
//			896,
//			2733,
//			3689,
//			2939,
//			649,
//			566,
//			599,
//			619,
//			558,
//			573,
//			465,
//			417,
//			478,
//			436
//	};
	
	// Fems4 07.10.21
//	public final static int[] PV_POWER = { 0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			566,
//			750,
//			768,
//			965,
//			1735,
//			2030,
//			2121,
//			2035,
//			1978,
//			2579,
//			3091,
//			3560,
//			6060,
//			6270,
//			6324,
//			5926,
//			3825,
//			4617,
//			6544,
//			7058,
//			5107,
//			2804,
//			3141,
//			3747,
//			4317,
//			3515,
//			2542,
//			2976,
//			3337,
//			3318,
//			1540,
//			1494,
//			1353,
//			926,
//			575,
//			389,
//			269,
//			236,
//			136,
//			74,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0
//	};
//	
//	// Fems4 07.10.21
//	public final static int[] HH_LOAD = { 463,
//			393,
//			407,
//			446,
//			419,
//			404,
//			408,
//			405,
//			387,
//			419,
//			416,
//			393,
//			399,
//			572,
//			3158,
//			3012,
//			5962,
//			5809,
//			3473,
//			661,
//			469,
//			564,
//			774,
//			810,
//			910,
//			843,
//			1997,
//			1259,
//			1765,
//			924,
//			1213,
//			2141,
//			2957,
//			1839,
//			772,
//			1140,
//			935,
//			979,
//			1028,
//			1827,
//			1239,
//			1197,
//			1979,
//			4527,
//			4004,
//			3785,
//			3342,
//			3592,
//			3515,
//			3352,
//			4669,
//			3379,
//			1959,
//			2376,
//			1443,
//			1098,
//			1996,
//			2312,
//			1667,
//			808,
//			692,
//			719,
//			1184,
//			2491,
//			5442,
//			6442,
//			6400,
//			2191,
//			749,
//			1570,
//			618,
//			1176,
//			783,
//			801,
//			854,
//			822,
//			831,
//			841,
//			3317,
//			3611,
//			2746,
//			596,
//			551,
//			568,
//			714,
//			595,
//			618,
//			562,
//			552,
//			549,
//			443,
//			565,
//			480,
//			403,
//			421,
//			381
//	};
	
	// Fems4 13.12.21
//	public final static int[] PV_POWER = {
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			214,
//			307,
//			338,
//			387,
//			571,
//			428,
//			587,
//			759,
//			1188,
//			970,
//			1172,
//			1396,
//			1416,
//			1504,
//			1492,
//			1473,
//			891,
//			1196,
//			2128,
//			2114,
//			1935,
//			1439,
//			1650,
//			1029,
//			551,
//			748,
//			391,
//			234,
//			182,
//			950,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0
//	};
//	
//	// Fems4 13.12.21
//	public final static int[] HH_LOAD = {
//			521,
//			496,
//			526,
//			476,
//			528,
//			460,
//			470,
//			485,
//			502,
//			461,
//			497,
//			483,
//			474,
//			537,
//			538,
//			460,
//			3434,
//			5392,
//			2999,
//			4711,
//			5465,
//			3821,
//			4529,
//			5465,
//			1235,
//			982,
//			2003,
//			3405,
//			2455,
//			1109,
//			1180,
//			2120,
//			2322,
//			3230,
//			2209,
//			1698,
//			3130,
//			2525,
//			3866,
//			4107,
//			3452,
//			4573,
//			4965,
//			6758,
//			10149,
//			9567,
//			6492,
//			5311,
//			4889,
//			5295,
//			5904,
//			4402,
//			6122,
//			4140,
//			2617,
//			1841,
//			1193,
//			1312,
//			1070,
//			1493,
//			951,
//			2106,
//			3168,
//			2453,
//			2009,
//			1966,
//			1248,
//			2706,
//			3183,
//			5528,
//			9024,
//			7360,
//			4400,
//			3072,
//			3052,
//			3035,
//			4195,
//			3096,
//			3032,
//			2383,
//			720,
//			778,
//			792,
//			779,
//			760,
//			728,
//			804,
//			1163,
//			691,
//			2128,
//			490,
//			552,
//			511,
//			519,
//			517,
//			472
//	};
	
//	// Fems4 21.12.21 
//	public final static int[] PV_POWER = {
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			793,
//			2430,
//			4272,
//			5700,
//			7066,
//			9713,
//			13130,
//			17057,
//			18175,
//			20867,
//			21621,
//			22831,
//			23869,
//			23914,
//			23529,
//			20033,
//			17019,
//			14532,
//			11273,
//			8932,
//			7152,
//			5037,
//			5645,
//			4578,
//			2983,
//			2255,
//			2083,
//			1903,
//			999,
//			725,
//			409,
//			378,
//			78,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0,
//			0
//	};
//	
//	// Fems4 21.12.21 
//	public final static int[]  HH_LOAD = {
//			532,
//			467,
//			517,
//			451,
//			477,
//			485,
//			475,
//			470,
//			507,
//			494,
//			479,
//			469,
//			1158,
//			440,
//			829,
//			1767,
//			3492,
//			5253,
//			5288,
//			5365,
//			5582,
//			3280,
//			5559,
//			3870,
//			643,
//			1782,
//			3680,
//			918,
//			936,
//			4117,
//			2301,
//			1094,
//			1984,
//			2689,
//			3200,
//			4336,
//			2318,
//			1377,
//			2926,
//			3110,
//			1658,
//			1486,
//			2486,
//			4014,
//			5879,
//			5932,
//			5654,
//			4653,
//			5034,
//			4781,
//			4968,
//			6069,
//			5962,
//			6001,
//			5033,
//			2426,
//			1061,
//			976,
//			1144,
//			1082,
//			1919,
//			2145,
//			2123,
//			2243,
//			1976,
//			1946,
//			1553,
//			1480,
//			1280,
//			3743,
//			3904,
//			5600,
//			4032,
//			3375,
//			3554,
//			3552,
//			3404,
//			1674,
//			3696,
//			3568,
//			3447,
//			3271,
//			3289,
//			3199,
//			3136,
//			3190,
//			3179,
//			3141,
//			3155,
//			2913,
//			687,
//			876,
//			897,
//			761,
//			673,
//			982
//	};
	
// specify sell revenue and buy cost
	public final static int GRID_SELL_REVENUE_CONST = 10; // [ct]
	public final static int[] GRID_SELL_REVENUE = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_SELL_REVENUE_CONST)
			.toArray();

	public final static int GRID_BUY_COST_CONST = 30; // [ct]
	public final static int[] GRID_BUY_COST = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_BUY_COST_CONST)
			.toArray();
	
// TODO time-varying charge pricing	
//	public final static int[] GRID_BUY_COST = { ... };
}
