package io.openems.controller.emsig.ojalgo;

import java.util.stream.IntStream;

public class Constants {

	public final static int NO_OF_PERIODS = 96; // 24 or 96, for Fems2541 168
	public final static int MINUTES_PER_PERIOD = 15; // 60 or 15

	/**
	 * Grid Feed-In Limit, e.g. 70 % law
	 */
	public final static int GRID_SELL_LIMIT = 30000; // [W]
	public final static int GRID_BUY_LIMIT = 30000; // [W]

	public final static int ESS_INITIAL_ENERGY = 25000; // [Wh] //
	public final static int ESS_MIN_ENERGY = 0; // [Wh]
	public final static int ESS_MAX_ENERGY = 44000; // [Wh] Fems4: 44000 Fems2541: ?
	public final static int ESS_MAX_CHARGE = 10000; // [W]
	public final static int ESS_MAX_CHARGE_DIFFERENCE = 2500; // [W]
	public final static int ESS_MAX_DISCHARGE = 10000; // [W]
	public final static int ESS_CHARGE_EFFICIENCY = 95; // [%, 0-100] 
	public final static int ESS_DISCHARGE_EFFICIENCY = 105; // [%, 100-200] 
	
	
	//EV charging
	//  EV charging processes can be specified by their
	// available time for charging, minimum and maximum required energy to be
	// charged (add variables), potentially hardware-specific charging limitations,
	// and a charging command
	public final static int EV_INITIAL_ENERGY = 12000; // [Wh] 
	public final static int EV_MAX_ENERGY = 25000; // [Wh] Tesla 3: 50 - 75 kWh
	public final static int EV_REQUIRED_ENERGY = 16000; // [Wh] 
	public final static int EV_MIN_CHARGE = 4200; // [W] (3 phase)
	public final static int EV_MAX_CHARGE = 8000; // [W] Hardy Barth cpm 2 or Keba 4: 11000 (3 phase)
	public final static int EV_CHARGE_EFFICIENCY = 90; // [%, 0-100]
	
	// The availability of the EV is provided by the customer
	public final static int[] EV_AVAIL = {
			1, 1, 1, 1, 
			1, 1, 1, 1,
			1, 1, 1, 1, 
			1, 1, 1, 1, 
			1, 1, 1, 1, 
			1, 1, 1, 1, 
			1, 1, 1, 0, 
			0, 0, 0, 0, 
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 1, 1,
			1, 1, 1, 1,
			1, 1, 1, 1,
			1, 1, 1, 1,
			1, 1, 1, 1,
			1, 1, 1, 1,
	};
	
//	public final static int[] EV_AVAIL = {
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1,
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 0, 
//			0, 0, 0, 0, 
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//	};
	
//	public final static int[] EV_AVAIL = {
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1,
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 1, 
//			0, 0, 0, 0, //1, 1, 1, 0, 
//			1, 1, 1, 1, 
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 1, 1, 
//			1, 1, 1, 1,
//			1, 1, 1, 1,
//			1, 1, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//	};
	
//	public final static int[][] EV_AVAIL = {
//			{1,1}, {1,1}, {1,1}, {1,1}, 
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {0,0},
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {0,0}, {0,0}, 
//			{0,0}, {0,0}, {1,1}, {1,1}, 
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//			{1,1}, {1,1}, {1,1}, {1,1},
//	};
	
	
	
	// add PV, assume (for now) constant production
//	public final static int PV_POWER_CONST = 70; // [W]
//	public final static int[] PV_POWER = IntStream.of(new int[NO_OF_PERIODS]).map(i -> PV_POWER_CONST)
//			.toArray();
	
//	public final static int[] EV_AVAIL = {1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1};
//	public final static int[] PV_POWER = {0, 0, 0, 0, 0, 0, 0, 50, 60, 70, 100, 150, 300, 300, 200, 100, 50, 50, 0, 0, 0, 0, 0, 0};
//	public final static int[] HH_LOAD = {100, 100, 100, 100, 100, 100, 150, 150, 200, 300, 200, 250, 200, 200, 150, 150, 200, 150, 100, 100, 100, 100, 100, 100};

	// add some (household) load which is once again assumed to be constant
//	public final static int HH_LOAD_CONST = 150; // [W]
//	public final static int[] HH_LOAD = IntStream.of(new int[NO_OF_PERIODS]).map(i -> HH_LOAD_CONST)
//			.toArray();

	// Some test data
	// Fems4, 22.07.21 (54% --> 69% SoC)
//	public final static int[] PV_POWER = {0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 6, 246, 504,
//			759, 969, 1161, 1377,
//			1655, 1968, 2728, 4035,
//			5102, 7122, 8826, 9909,
//			11885, 12889, 14194, 15494,
//			16664, 17709, 18609, 19517,
//			20298, 21151, 21851, 22627,
//			23483, 23614, 23744, 24046,
//			24047, 23898, 24123, 23773,
//			23526, 23253, 23077, 22456,
//			22041, 21509, 20661, 19885,
//			19001, 18034, 17041, 15849,
//			14527, 12980, 10395, 7633,
//			5310, 3472, 2331, 1878,
//			1538, 1182, 834, 510,
//			276, 34, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0 
//			};
	
//	// Fems4, 22.07.2021 (54% --> 69% SoC)
//	public final static int[] HH_LOAD = {
//			2743, 2654, 2693, 2707,
//			2623, 2642, 2699, 2670,
//			2640, 2724, 2669, 2630,
//			2699, 2656, 2644, 2672,
//			2657, 2748, 2845, 3094,
//			2955, 2736, 2685, 2373,
//			1228, 912, 519, 518,
//			930, 750, 743, 606,
//			565, 2282, 2829, 3363, 
//			3065, 3038, 919, 796,
//			829, 789, 786, 1411,
//			3804, 3934, 4165, 2497, 
//			1889, 2152, 1081, 868, 
//			899, 816, 865, 890,
//			877, 916, 1592, 3143, 
//			3126, 2913, 4832, 5522,
//			3667, 3604, 2857, 2859,
//			3836, 4054, 4746, 3900,
//			4292, 4078, 4388, 4645,
//			5265, 6669, 5219, 5273,
//			5306, 5269, 3085, 2966,
//			1653, 736, 675, 725,
//			654, 630, 457, 444,
//			504, 434, 419, 491
//	};
	
	// Fems4 23.07.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 12, 301,
//			742, 1096, 1511, 1852,
//			2011, 2101, 2500, 3528,
//			4271, 5335, 6697, 8529,
//			8656, 10293, 12348, 13640,
//			14804, 15710, 16742, 17765,
//			18692, 19442, 20255, 20924,
//			21574, 22361, 22444, 22929,
//			23215, 23143, 23093, 23077,
//			22837, 22577, 22336, 21931,
//			21488, 21086, 20615, 19989,
//			19394, 18527, 17569, 16508,
//			15351, 14201, 12917, 10233,
//			7414, 5074, 3194, 2026,
//			1612, 1318, 1027, 743,
//			448, 260, 27, 0, 
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
//	
//	// Fems4 23.07.21
//	public final static int[] HH_LOAD = {
//			466, 459, 495, 483,
//			460, 445, 528,439,
//			408, 378, 388, 394,
//			389, 422, 437, 415,
//			397, 434, 786, 497,
//			660, 612, 550, 687,
//			666, 875, 679, 877,
//			2779, 2727, 2777, 487,
//			537, 581, 476, 1004,
//			787, 792, 818, 915,
//			773, 681, 708, 1260,
//			3660, 3681, 3561, 892,
//			1889, 1647, 2225, 1010,
//			3055, 3478, 4959, 3622,
//			3457, 3467, 5363, 5994,
//			6177, 8692, 5625, 5402,
//			5464, 5001, 3994, 4464,
//			3429, 1727, 1149, 1665,
//			1416, 1471, 770, 1560,
//			1298, 1856, 4300, 3630,
//			3582, 3317, 4687, 3919,
//			4157, 4105, 4121, 3906,
//			3740, 3199, 2019, 462,
//			431, 460, 445, 395
//	};
	
	
	//Fems4 22.07.21 noon til 23.07.21 noon
//	public final static int[] PV_POWER = {
//			24047, 23898, 24123, 23773,
//			23526, 23253, 23077, 22456,
//			22041, 21509, 20661, 19885,
//			19001, 18034, 17041, 15849,
//			14527, 12980, 10395, 7633,
//			5310, 3472, 2331, 1878,
//			1538, 1182, 834, 510,
//			276, 34, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 12, 301,
//			742, 1096, 1511, 1852,
//			2011, 2101, 2500, 3528,
//			4271, 5335, 6697, 8529,
//			8656, 10293, 12348, 13640,
//			14804, 15710, 16742, 17765,
//			18692, 19442, 20255, 20924,
//			21574, 22361, 22444, 22929
//	};
//	
//	//Fems4 22.07.21 noon til 23.07.21 noon
//	public final static int[] HH_LOAD = {
//			1889, 2152, 1081, 868, 
//			899, 816, 865, 890,
//			877, 916, 1592, 3143, 
//			3126, 2913, 4832, 5522,
//			3667, 3604, 2857, 2859,
//			3836, 4054, 4746, 3900,
//			4292, 4078, 4388, 4645,
//			5265, 6669, 5219, 5273,
//			5306, 5269, 3085, 2966,
//			1653, 736, 675, 725,
//			654, 630, 457, 444,
//			504, 434, 419, 491,
//			466, 459, 495, 483,
//			460, 445, 528,439,
//			408, 378, 388, 394,
//			389, 422, 437, 415,
//			397, 434, 786, 497,
//			660, 612, 550, 687,
//			666, 875, 679, 877,
//			2779, 2727, 2777, 487,
//			537, 581, 476, 1004,
//			787, 792, 818, 915,
//			773, 681, 708, 1260,
//			3660, 3681, 3561, 892
//	};
	
	
	
	// Fems4 05.10.21 (73% --> 8% SoC)
//	public final static int[]  PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			483, 732, 989, 2436,
//			3475, 2245, 3086, 6475,
//			7215, 7037, 4162, 4568,
//			3728, 1605, 1928, 3853,
//			6337, 3085, 2495, 1927,
//			2168, 3324, 5365, 4967,
//			5627, 4584, 5822, 3813,
//			2549, 2543, 2723, 3139,
//			3169, 2049, 1490, 1617,
//			2367, 1700, 961, 939,
//			698, 129, 1211, 529,
//			418, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0 }; 
//	
//	// Fems4 05.10.21 (73% --> 8% SoC)
//	public final static int[]  HH_LOAD = {
//			400, 429, 483, 427,
//			456, 460, 424, 401,
//			458, 400, 446, 446,
//			1861, 3502, 4969, 5368,
//			426, 419, 458, 393,
//			528, 2047, 3738, 6339,
//			3958, 718, 918, 773,
//			632, 1097, 672, 754,
//			1276, 1539, 2721, 2096,
//			1215, 1189, 675, 748,
//			1156, 679, 2174, 6353,
//			6314, 5516, 7443, 8324,
//			8276, 7880, 6547, 3653,
//			7518, 8998, 9472, 8895,
//			3400, 1716, 1463, 1394,
//			1195, 1265, 525, 724,
//			3915, 6383, 6091, 4092,
//			1393, 2141, 1633, 1250,
//			1019, 966, 911, 987,
//			1060, 1087, 1071, 978,
//			890, 907, 896, 2733,
//			3689, 2939, 649, 566,
//			599, 619, 558, 573,
//			465, 417, 478, 436
//	};
	
	// Fems4 07.10.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 566,
//			750, 768, 965, 1735,
//			2030, 2121, 2035, 1978,
//			2579, 3091, 3560, 6060,
//			6270, 6324, 5926, 3825,
//			4617, 6544, 7058, 5107,
//			2804, 3141, 3747, 4317,
//			3515, 2542, 2976, 3337,
//			3318, 1540, 1494, 1353,
//			926, 575, 389, 269,
//			236, 136, 74, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
//	
//	// Fems4 07.10.21
//	public final static int[] HH_LOAD = { 
//			463, 393, 407, 446,
//			419, 404, 408, 405,
//			387, 419, 416, 393,
//			399, 572, 3158, 3012,
//			5962, 5809, 3473, 661,
//			469, 564, 774, 810,
//			910, 843, 1997, 1259,
//			1765, 924, 1213, 2141,
//			2957, 1839, 772, 1140, 
//			935, 979, 1028, 1827,
//			1239, 1197, 1979, 4527,
//			4004, 3785, 3342, 3592,
//			3515, 3352, 4669, 3379,
//			1959, 2376, 1443, 1098,
//			1996, 2312, 1667, 808,
//			692, 719, 1184, 2491,
//			5442, 6442, 6400, 2191,
//			749, 1570, 618, 1176,
//			783, 801, 854, 822,
//			831, 841, 3317, 3611,
//			2746, 596, 551, 568,
//			714, 595, 618, 562,
//			552, 549, 443, 565,
//			480, 403, 421, 381
//	};
	
	// Fems4 13.12.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 214, 307,
//			338, 387, 571, 428,
//			587, 759, 1188, 970,
//			1172, 1396, 1416, 1504,
//			1492, 1473, 891, 1196,
//			2128, 2114, 1935, 1439,
//			1650, 1029, 551, 748,
//			391, 234, 182, 950,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
//	
//	// Fems4 13.12.21
//	public final static int[] HH_LOAD = {
//			521, 496, 526, 476,
//			528, 460, 470, 485,
//			502, 461, 497, 483,
//			474, 537, 538, 460,
//			3434, 5392, 2999, 4711,
//			5465, 3821, 4529, 5465,
//			1235, 982, 2003, 3405,
//			2455, 1109, 1180, 2120,
//			2322, 3230, 2209, 1698,
//			3130, 2525, 3866, 4107,
//			3452, 4573, 4965, 6758,
//			10149, 9567, 6492, 5311,
//			4889, 5295, 5904, 4402,
//			6122, 4140, 2617, 1841,
//			1193, 1312, 1070, 1493,
//			951, 2106, 3168, 2453,
//			2009, 1966, 1248, 2706,
//			3183, 5528, 9024, 7360,
//			4400, 3072, 3052, 3035,
//			4195, 3096, 3032, 2383,
//			720, 778, 792, 779,
//			760, 728, 804, 1163,
//			691, 2128, 490, 552,
//			511, 519, 517, 472
//	};
	
	// Fems4 21.12.21 (11% --> 31% SoC)
//	public final static int[] PV_POWER = {
//			0,0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			793, 2430, 4272, 5700,
//			7066, 9713, 13130, 17057,
//			18175, 20867, 21621, 22831,
//			23869, 23914, 23529, 20033,
//			17019, 14532, 11273, 8932,
//			7152, 5037, 5645, 4578,
//			2983, 2255, 2083, 1903,
//			999, 725, 409, 378,
//			78, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
//	
//	// Fems4 21.12.21 (11% --> 31% SoC)
//	public final static int[]  HH_LOAD = {
//			532, 467, 517, 451,
//			477, 485, 475, 470,
//			507, 494, 479, 469,
//			1158, 440, 829, 1767,
//			3492, 5253, 5288, 5365,
//			5582, 3280, 5559, 3870,
//			643, 1782, 3680, 918,
//			936, 4117, 2301, 1094,
//			1984, 2689, 3200, 4336,
//			2318, 1377, 2926, 3110,
//			1658, 1486, 2486, 4014,
//			5879, 5932, 5654, 4653,
//			5034, 4781, 4968, 6069,
//			5962, 6001, 5033, 2426,
//			1061, 976, 1144, 1082,
//			1919, 2145, 2123, 2243,
//			1976, 1946, 1553, 1480,
//			1280, 3743, 3904, 5600,
//			4032, 3375, 3554, 3552,
//			3404, 1674, 3696, 3568,
//			3447, 3271, 3289, 3199,
//			3136, 3190, 3179, 3141,
//			3155, 2913, 687, 876,
//			897, 761, 673, 982
//	};
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
	
	// Fems2541 22.08.21 
	public final static int[] PV_POWER = {
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 21,
			46, 45, 175, 214,
			468, 468, 594, 500,
			805, 1847, 2189, 1152,
			1892, 2786, 4193, 3404,
			3070, 2978, 2683, 2883,
			2763, 3803, 3490, 6343,
			6167, 5486, 6522, 3742,
			2604, 5124, 5300, 5608,
			4972, 4280, 3593, 3433,
			3901, 3126, 3811, 3759,
			3514, 2858, 2564, 1472,
			958, 248, 118, 123,
			510, 1050, 718, 900,
			577, 243, 124, 61,
			37, 13, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0
	};
	
	
	// Fems2541 22.08.21 
//	public final static int[] PV0_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 21/2,
//			46/2, 45/2, 175/2, 214/2,
//			468/2, 468/2, 594/2, 500/2,	
//			805/11*6, 1847/11*6, 2189/11*6, 1152/11*6,
//			1892/19*13, 2786/19*13, 4193/19*13, 3404/19*13,
//			3070/39*33, 2978/39*33, 2683/39*33, 2883/39*33,
//			2763/40*33, 3803/40*33, 3490/40*33, 6343/40*33,
//			6167/43*35, 5486/43*35, 6522/43*35, 3742/43*35,
//			2604/41*33, 5124/41*33, 5300/41*33, 5608/41*33,
//			4972/45*38, 4280/45*38, 3593/45*38, 3433/45*38,
//			3901/37*29, 3126/37*29, 3811/37*29, 3759/37*29,
//			3514/46*38, 2858/46*38, 2564/46*38, 1472/46*38,
//			958/3*2, 248/3*2, 118/3*2, 123/3*2,
//			510/11*4, 1050/11*4, 718/11*4, 900/11*4,
//			577/34*14, 243/34*14, 124/34*14, 61/34*14,
//			37/2, 13/2, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
	
//	public final static int[] PV1_POWER = new int[NO_OF_PERIODS];
//			for (int i = 0; i < NO_OF_PERIODS; i ++) {
//				PV1_POWER[i] = PV_POWER[i] - PV0_POWER[i];
//			}
	
	
	// Fems2541 22.08.21 
//	public final static int[] PV1_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 21/2,
//			46/2, 45/2, 175/2, 214/2,
//			468/2, 468/2, 594/2, 500/2,	
//			805/11*5, 1847/11*5, 2189/11*5, 1152/11*5,
//			1892/19*6, 2786/19*6, 4193/19*6, 3404/19*6,
//			3070/39*6, 2978/39*6, 2683/39*6, 2883/39*6,
//			2763/40*7, 3803/40*7, 3490/40*7, 6343/40*7,
//			6167/43*8, 5486/43*8, 6522/43*8, 3742/43*8,
//			2604/41*8, 5124/41*8, 5300/41*8, 5608/41*8,
//			4972/45*7, 4280/45*7, 3593/45*7, 3433/45*7,
//			3901/37*8, 3126/37*8, 3811/37*8, 3759/37*8,
//			3514/46*8, 2858/46*8, 2564/46*8, 1472/46*8,
//			958/3, 248/3, 118/3, 123/3,
//			510/11*7, 1050/11*7, 718/11*7, 900/11*7,
//			577/34*20, 243/34*20, 124/34*20, 61/34*20,
//			37/2, 13/2, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
//	
//	// Fems2541 22.08.2021
	public final static int[] HH_LOAD = {
			139, 263, 269, 185,
			145, 165, 274, 249,
			148, 148, 235, 270,
			182, 147, 171, 283,
			269, 152, 150, 247,
			325, 233, 148, 150,
			256, 246, 143, 145,
			210, 302, 281, 154,
			202, 343, 367, 385,
			384, 318, 371, 392,
			372, 285, 249, 281,
			385, 353, 259, 247,
			338, 368, 314, 247,
			240, 345, 345, 254,
			237, 286, 362, 350,
			240, 229, 293, 210,
			104, 162, 201, 291,
			278, 145, 134, 189,
			240, 232, 207, 213,
			303, 290, 160, 147,
			199, 283, 264, 155,
			156, 227, 279, 214,
			157, 153, 278, 277,
			465, 573, 648, 713,
	};
	
	
	// Fems2541 26.11.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 6, 12,
//			12, 19, 39, 85,
//			157, 148, 75, 117,
//			255, 261, 418, 541,
//			494, 664, 455, 532,
//			925, 775, 1149, 996,
//			569, 345, 152, 80,
//			180, 126, 47, 119,
//			81, 23, 6, 6,
//			6, 0, 0, 0,
//			0, 0, 0, 0, // 17:00 - 18:00 
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//};
	
	
	
	// Fems2541 26.11.21, load + EV
//	public final static int[] HH_LOAD = {
//			297, 205, 2602, 1026,
//			291, 238, 768, 405,
//			293, 273, 560, 636,
//			946, 880, 497, 752,
//			245, 655, 567, 1403,
//			377, 648, 603, 786,
//			1604, 2387, 1201, 1328,
//			1105, 746, 836, 808,
//			5133, 9061, 8551, 7890,
//			7700, 7176, 8154, 7727,
//			1331, 1019, 743, 1001,
//			2009, 681, 580, 593,
//			1572, 1676, 927, 634,
//			1283, 1671, 1535, 1152,
//			1196, 811, 2403, 3146,
//			1228, 1265, 1889, 2868,
//			2297, 1356, 2179, 2159,
//			2282, 2244, 2142, 1314, // 17:00 - 18:00 
//			1054, 2568, 2850, 902,
//			669, 2644, 2682, 1107,
//			906, 2572, 2837, 672,
//			1316, 1305, 2198, 4157,
//			5440, 5547, 5451, 4993,
//			4971, 5221, 5022, 5180,
//
//	};
	
	
	
	// Fems2541 27.11.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 3, 15, 41,
//			55, 120, 278, 475,
//			492, 698, 857, 1198,
//			996, 1031, 1044, 848,
//			783, 767, 831, 738,
//			1155, 1122, 965, 719,
//			973, 1252, 1343, 1595,
//			1034, 872, 858, 743,
//			500, 92, 70, 90,
//			49, 1, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
	
	
	
	// Fems2541 27.11.21, load + EV
//	public final static int[] HH_LOAD = {
//			4989, 5117, 3001, 1023,
//			978, 312, 328, 1360,
//			1372, 698, 432, 535,
//			1231, 1476, 663, 635,
//			228, 1134, 2892, 1854,
//			207, 678, 921, 1270,
//			2713, 1432, 908, 970,
//			761, 2603, 2141, 885,
//			1114, 894, 3482, 3495,
//			1106, 1182, 1825, 741,
//			617, 2808, 2277, 1347,
//			2371, 1533, 2967, 2195,
//			2583, 3677, 2498, 1781,
//			2046, 2216, 1865, 1471,
//			1297, 1286, 2540, 4057,
//			3404, 1613, 1600, 2543,
//			1993, 1211, 488, 936,
//			1235, 1061, 329, 424,
//			1091, 3434, 6367, 6761,
//			6807, 6738, 6232, 6043,
//			6365, 6342, 6022, 5509,
//			5353, 6059, 6474, 5379,
//			5324, 5358, 5600, 6100,
//			5197, 2115, 335, 691,
//
//	};
	
	
	
	// Fems2541 28.11.21
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 7,
//			13, 14, 15, 16,
//			148, 319, 273, 301,
//			271, 177, 270, 327, // 10:00 - 11:00
//			277, 282, 278, 255,
//			255, 239, 235, 217,
//			234, 294, 388, 493,
//			539, 753, 176, 172,
//			149, 44, 10, 12,
//			4, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0
//	};
	
	
	
	// Fems2541 28.11.21, load + EV
//	public final static int[] HH_LOAD = {
//			718, 868, 328, 314,
//			1110, 579, 267, 279,
//			320, 819, 528, 242,
//			176, 193, 719, 703,
//			194, 176, 236, 943,
//			1187, 182, 182, 331,
//			979, 219, 175, 1741,
//			2044, 747, 181, 187,
//			842, 3193, 1337, 303,
//			648, 710, 1449, 869,
//			1479, 2300, 877, 1155, // 10:00 - 11:00 
//			647, 895, 1208, 2586,
//			2096, 559, 864, 1611,
//			2304, 2002, 1203, 710,
//			1362, 1242, 2131, 2105,
//			971, 1361, 1947, 2216,
//			1590, 927, 1449, 1985,
//			1329, 538, 1023, 1169,
//			490, 493, 748, 1177,
//			983, 1700, 1810, 2225,
//			1936, 735, 1215, 369,
//			319, 463, 3263, 5342,
//			5859, 5394, 4933, 5827,
//			5762, 5365, 4930, 5002,
//	};
	
	//Fems2541 26.11.21 17:00 - 28.11.21 11:00 
	// 212 periods
//	public final static int[] PV_POWER = {
//			0, 0, 0, 0, // 17:00 - 18:00 
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 3, 15, 41,
//			55, 120, 278, 475,
//			492, 698, 857, 1198,
//			996, 1031, 1044, 848,
//			783, 767, 831, 738,
//			1155, 1122, 965, 719,
//			973, 1252, 1343, 1595,
//			1034, 872, 858, 743,
//			500, 92, 70, 90,
//			49, 1, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 0,
//			0, 0, 0, 7,
//			13, 14, 15, 16,
//			148, 319, 273, 301,
//			271, 177, 270, 327, // 10:00 - 11:00
//	};
//	
//	//Fems2541 26.11.21 17:00 - 28.11.21 11:00 
//		// 212 periods, load + EV 
//	public final static int[] HH_LOAD = {
//			2282, 2244, 2142, 1314, // 17:00 - 18:00 
//			1054, 2568, 2850, 902,
//			669, 2644, 2682, 1107,
//			906, 2572, 2837, 672,
//			1316, 1305, 2198, 879, 		//1316, 1305, 2198, 4157, substract EV1 power
//			686, 811, 719, 321, 		//5440, 5547, 5451, 4993,
//			296, 542, 335, 495, 		//4971, 5221, 5022, 5180,
//			307, 423, 53, 1023, 		//4989, 5117, 3001, 1023,
//			978, 312, 328, 1360,
//			1372, 698, 432, 535,
//			1231, 1476, 663, 635,
//			228, 1134, 2892, 1854,
//			207, 678, 921, 1270,
//			2713, 1432, 908, 970,
//			761, 2603, 2141, 885,
//			1114, 894, 3482, 3495,
//			1106, 1182, 1825, 741,
//			617, 2808, 2277, 1347,
//			2371, 1533, 2967, 2195,
//			2583, 3677, 2498, 1781,
//			2046, 2216, 1865, 1471,
//			1297, 1286, 2540, 4057,
//			3404, 1613, 1600, 2543,
//			1993, 1211, 488, 936,
//			1235, 1061, 329, 424, 		// 17:00 - 18:00, EV2 is charged now
//			1091, 356, 1767, 2113, 		//1091, 3434, 6367, 6761,
//			2112, 2023, 1549, 1411,		//6807, 6738, 6232, 6043,
//			1731, 1694, 1362, 824, 		//6365, 6342, 6022, 5509,
//			660, 1367, 2042, 694, 		//5353, 6059, 6474, 5379,
//			659, 672, 896, 1406, 		//5324, 5358, 5600, 6100,
//			477, 529, 335, 691, 		//5197, 2115, 335, 691,
//			718, 868, 328, 314,
//			1110, 579, 267, 279,
//			320, 819, 528, 242,
//			176, 193, 719, 703,
//			194, 176, 236, 943,
//			1187, 182, 182, 331,
//			979, 219, 175, 1741,
//			2044, 747, 181, 187,
//			842, 3193, 1337, 303,
//			648, 710, 1449, 869,
//			1479, 2300, 877, 1155, // 10:00 - 11:00 	
//	};
//	
//	// Fems2541 26.11.21 17:00 - 28.11.21 11:00
//	// Availability of the cars
//	public final static int[][] EV_AVAIL = {
//			{0, 0}, {0, 0}, {0, 0}, {0, 0}, // 17:00 - 18:00 
//			{0, 0}, {0, 0}, {0, 0}, {0, 0},
//			{0, 0}, {0, 0}, {0, 0}, {0, 0},
//			{0, 0}, {0, 0}, {0, 0}, {0, 0},
//			{0, 0}, {0, 0}, {0, 0}, {0, 0}, // 21:00 - 22:00, EV1 is plugged now
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0},
//			{1, 0}, {1, 0}, {1, 0}, {1, 0}, // 16:00 - 17:00, both EVs are unplugged now
//			{0, 0}, {0, 0}, {0, 0}, {0, 0}, // 17:00 - 18:00, at 18:15 EV2 is plugged
//			{0, 0}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1},
//			{0, 1}, {0, 1}, {0, 1}, {0, 1}, // 09:00 - 10:00, both EVs are unplugged now
//			{0, 0}, {0, 0}, {0, 0}, {0, 0}
//	};
	
	
// specify sell revenue and buy cost
	public final static int GRID_SELL_REVENUE_CONST = 10; // [ct]
	public final static int[] GRID_SELL_REVENUE = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_SELL_REVENUE_CONST)
			.toArray();
	public final static int GRID_SELL_REVENUE_CONST0 = 10; // [ct]
	public final static int[] GRID_SELL_REVENUE0 = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_SELL_REVENUE_CONST0)
			.toArray();
	public final static int GRID_SELL_REVENUE_CONST1 = 3; // [ct]
	public final static int[] GRID_SELL_REVENUE1 = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_SELL_REVENUE_CONST1)
			.toArray();
	
	public final static int GRID_BUY_COST_CONST = 30; // [ct]
//	public final static int[] GRID_BUY_COST = IntStream.of(new int[NO_OF_PERIODS]).map(i -> GRID_BUY_COST_CONST)
//			.toArray();
	
//	public final static double[] GRID_BUY_COST = {15.895, 16.098, 17.115, 17.496, 16.153, 15.2, 12.001, 11.103, 10.504, 10.5, 7.423, 7.328, 6.797, 7.253, 8.966, 15.01, 17.354, 17.84, 15.891, 14.001, 14.999, 15.743, 13.09, 12.014 }; 
	
//	public final static double[] GRID_BUY_COST = {
//			15.895, 15.895, 15.895, 15.895,
//			16.098, 16.098, 16.098, 16.098,
//			17.115, 17.115, 17.115, 17.115,
//			17.496, 17.496, 17.496, 17.496,
//			16.153, 16.153, 16.153, 16.153, 
//			15.2, 15.2, 15.2, 15.2, 
//			12.001, 12.001, 12.001, 12.001,
//			11.103, 11.103, 11.103, 11.103,
//			10.504, 10.504, 10.504, 10.504,
//			10.5, 10.5, 10.5, 10.5,
//			7.423, 7.423, 7.423, 7.423,
//			7.328, 7.328, 7.328, 7.328,
//			6.797, 6.797, 6.797, 6.797,
//			7.253, 7.253, 7.253, 7.253,
//			8.966, 8.966, 8.966, 8.966,
//			15.01, 15.01, 15.01, 15.01,
//			17.354, 17.354, 17.354, 17.354,
//			17.84, 17.84, 17.84, 17.84,
//			15.891, 15.891, 15.891, 15.891,
//			14.001, 14.001, 14.001, 14.001,
//			14.999, 14.999, 14.999, 14.999,
//			15.743, 15.743, 15.743, 15.743,
//			13.09, 13.09, 13.09, 13.09,
//			12.014, 12.014, 12.014, 12.014
//	};
	
//	public final static double[] GRID_BUY_COST = {
//			25, 25, 25, 25, 
//			24, 24, 24, 24, 
//			20, 20, 20, 20, 
//			23, 23, 23, 23,
//			20, 20, 20, 20, 
//			17, 17, 17, 17, 
//			19, 19, 19, 19, 
//			15, 15, 15, 15, 
//			15, 15, 15, 15, 
//			14, 14, 14, 14,
//			12, 12, 12, 12, 
//			13, 13, 13, 13, 
//			11, 11, 11, 11,
//			// 7, 7, 7, 7,
//			// 8, 8, 8, 8,
//			12, 12, 12, 12, 
//			13, 13, 13, 13, 
//			16, 16, 16, 16, 
//			17, 17, 17, 17, 
//			20, 20, 20, 20, 
//			24, 24, 24, 24,
//			25, 25, 25, 25, 
//			20, 20, 20, 20,
//			22, 22, 22, 22,
//			24, 24, 24, 24, 
//			20, 20, 20, 20
//	};
	
//	public final static double[] GRID_BUY_COST = {
//			20, 20, 20, 20, 	// 17:00 - 18:00 
//			24, 24, 24, 24,
//			25, 25, 25, 25, 
//			20, 20, 20, 20,
//			22, 22, 22, 22,
//			24, 24, 24, 24, 
//			20, 20, 20, 20,
//			25, 25, 25, 25, 
//			24, 24, 24, 24, 
//			20, 20, 20, 20, 
//			23, 23, 23, 23,
//			20, 20, 20, 20, 
//			17, 17, 17, 17, 
//			19, 19, 19, 19, 
//			15, 15, 15, 15, 
//			15, 15, 15, 15, 
//			14, 14, 14, 14,
//			12, 12, 12, 12, 
//			13, 13, 13, 13, 
//			11, 11, 11, 11,
//			// 7, 7, 7, 7,
//			// 8, 8, 8, 8,
//			12, 12, 12, 12, 
//			13, 13, 13, 13, 
//			16, 16, 16, 16, 
//			17, 17, 17, 17, 
//			20, 20, 20, 20, 
//			24, 24, 24, 24,
//			25, 25, 25, 25, 
//			20, 20, 20, 20,
//			22, 22, 22, 22,
//			24, 24, 24, 24, 
//			20, 20, 20, 20,
//			25, 25, 25, 25, 
//			24, 24, 24, 24, 
//			20, 20, 20, 20, 
//			23, 23, 23, 23,
//			20, 20, 20, 20, 
//			17, 17, 17, 17, 
//			19, 19, 19, 19, 
//			15, 15, 15, 15, 
//			15, 15, 15, 15, 
//			14, 14, 14, 14,
//			12, 12, 12, 12		 // 10:00 - 11:00
//	};
	
	
	
	// aWATTAR 22.08.2021 + 10 ct
	public final static double[] GRID_BUY_COST = {
			20.1, 20.1, 20.1, 20.1, 
			19.39, 19.39, 19.39, 19.39,
			18.92, 18.92, 18.92, 18.92, 
			18.59, 18.59, 18.59, 18.59,
			18.34, 18.34, 18.34, 18.34,
			18.01, 18.01, 18.01, 18.01,
			18.08, 18.08, 18.08, 18.08, 
			18.37, 18.37, 18.37, 18.37,
			18.86, 18.86, 18.86, 18.86, 
			19.14, 19.14, 19.14, 19.14, 
			19.06, 19.06, 19.06, 10.06,
			19.2, 19.2, 19.2, 19.2,
			19.1, 19.1, 19.1, 19.1,
			18.47, 18.47, 18.47, 18.47,
			18.19, 18.19, 18.19, 18.19,
			17.94, 17.94, 17.94, 17.94,
			18.16, 18.16, 18.16, 18.16,
			19.71, 19.71, 19.71, 19.71,
			20.47, 20.47, 20.47, 20.47,
			21.31, 21.31, 21.31, 21.31,
			21.66, 21.66, 21.66, 21.66,
			21.36, 21.36, 21.36, 21.36,
			20.72, 20.72, 20.72, 20.72,
			19.75, 19.75, 19.75, 19.75
	};
	
	
	//aWATTar 26.11.21 17:00 - 28.11.21 11:00
//	public final static double[] GRID_BUY_COST = {
//			22.77, 22.77, 22.77, 22.77,
//			26.88, 26.88, 26.88, 26.88,
//			21.67, 21.67, 21.67, 21.67,
//			19.65, 19.65, 19.65, 19.65, 
//			17.86, 17.86, 17.86, 17.86, 
//			14.18, 14.18, 14.18, 14.18,
//			14.12, 14.12, 14.12, 14.12,
//			12.98, 12.98, 12.98, 12.98,
//			
//			15.48, 15.48, 15.48, 15.48,
//			18.25, 18.25, 18.25, 18.25,
//			18.02, 18.02, 18.02, 18.02,
//			18.7, 18.7, 18.7, 18.7,
//			19.1, 19.1, 19.1, 19.1,
//			19.88, 19.88, 19.88, 19.88,
//			20.13, 20.13, 20.13, 20.13,
//			22.5, 22.5, 22.5, 22.5,
//			24.92, 24.92, 24.92, 24.92,
//			26.07, 26.07, 26.07, 26.07,
//			26.43, 26.43, 26.43, 26.43,
//			26.84, 26.84, 26.84, 26.84,
//			26.07, 26.07, 26.07, 26.07,
//			25.71, 25.71, 25.71, 25.71,
//			26.05, 26.05, 26.05, 26.05,
//			26.78, 26.78, 26.78, 26.78,
//			27.52, 27.52, 27.52, 27.52,
//			32.23, 32.23, 32.23, 32.23,
//			31.65, 31.65, 31.65, 31.65,
//			28.56, 28.56, 28.56, 28.56,
//			25.38, 25.38, 25.38, 25.38,
//			25.28, 25.28, 25.28, 25.28,
//			24.29, 24.29, 24.29, 24.29,
//			23.66, 23.66, 23.66, 23.66,
//			
//			23.08, 23.08, 23.08, 23.08,
//			22.48, 22.48, 22.48, 22.48,
//			22.39, 22.39, 22.39, 22.39,
//			21.56, 21.56, 21.56, 21.56,
//			20.94, 20.94, 20.94, 20.94,
//			20.77, 20.77, 20.77, 20.77,
//			21.59, 21.59, 21.59, 21.59,
//			21.99, 21.99, 21.99, 21.99, 
//			22.13, 22.13, 22.13, 22.13,
//			23.8, 23.8, 23.8, 23.8,
//			24.16, 24.16, 24.16, 24.16
//	};
	
	
}
